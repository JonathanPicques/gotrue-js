{
	"id": 0,
	"name": "@supabase/gotrue-js",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 774,
			"name": "AuthApiError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 775,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 19,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 776,
							"name": "new AuthApiError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 777,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 778,
									"name": "status",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 774,
								"name": "AuthApiError"
							},
							"overwrites": {
								"type": "reference",
								"id": 769,
								"name": "AuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 768,
						"name": "AuthError.constructor"
					}
				},
				{
					"id": 779,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 17,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"overwrites": {
						"type": "reference",
						"id": 772,
						"name": "AuthError.status"
					}
				},
				{
					"id": 780,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 25,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 781,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 782,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 784,
											"name": "message",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 28,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 783,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 27,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 785,
											"name": "status",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 29,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												784,
												783,
												785
											]
										}
									]
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						775
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						779
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						780
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 16,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 767,
					"name": "AuthError"
				}
			]
		},
		{
			"id": 767,
			"name": "AuthError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 768,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 5,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 769,
							"name": "new AuthError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 770,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 771,
									"name": "status",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 767,
								"name": "AuthError"
							},
							"overwrites": {
								"type": "reference",
								"name": "Error.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Error.constructor"
					}
				},
				{
					"id": 772,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 2,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						768
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						772
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 1,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"qualifiedName": "Error",
					"package": "typescript",
					"name": "Error"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 774,
					"name": "AuthApiError"
				},
				{
					"type": "reference",
					"id": 787,
					"name": "AuthUnknownError"
				},
				{
					"type": "reference",
					"id": 795,
					"name": "CustomAuthError"
				}
			]
		},
		{
			"id": 835,
			"name": "AuthImplicitGrantRedirectError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 836,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 80,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 837,
							"name": "new AuthImplicitGrantRedirectError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 838,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 839,
									"name": "details",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 840,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 842,
															"name": "code",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/lib/errors.ts",
																	"line": 80,
																	"character": 57
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 841,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/lib/errors.ts",
																	"line": 80,
																	"character": 42
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																842,
																841
															]
														}
													]
												}
											}
										]
									},
									"defaultValue": "null"
								}
							],
							"type": {
								"type": "reference",
								"id": 835,
								"name": "AuthImplicitGrantRedirectError"
							},
							"overwrites": {
								"type": "reference",
								"id": 797,
								"name": "CustomAuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 796,
						"name": "CustomAuthError.constructor"
					}
				},
				{
					"id": 843,
					"name": "details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 79,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 844,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 846,
											"name": "code",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 79,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 845,
											"name": "error",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 79,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												846,
												845
											]
										}
									]
								}
							}
						]
					},
					"defaultValue": "null"
				},
				{
					"id": 857,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 801,
						"name": "CustomAuthError.name"
					}
				},
				{
					"id": 858,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 50,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 802,
						"name": "CustomAuthError.status"
					}
				},
				{
					"id": 847,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 85,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 848,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 849,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 853,
											"name": "details",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 90,
													"character": 6
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 854,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 856,
																	"name": "code",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/lib/errors.ts",
																			"line": 79,
																			"character": 28
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 855,
																	"name": "error",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/lib/errors.ts",
																			"line": 79,
																			"character": 13
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		856,
																		855
																	]
																}
															]
														}
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 851,
											"name": "message",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 88,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 850,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 87,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 852,
											"name": "status",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 89,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												853,
												851,
												850,
												852
											]
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 804,
								"name": "CustomAuthError.toJSON"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 803,
						"name": "CustomAuthError.toJSON"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						836
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						843,
						857,
						858
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						847
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 78,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 795,
					"name": "CustomAuthError"
				}
			]
		},
		{
			"id": 822,
			"name": "AuthInvalidCredentialsError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 823,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 73,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 824,
							"name": "new AuthInvalidCredentialsError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 825,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 822,
								"name": "AuthInvalidCredentialsError"
							},
							"overwrites": {
								"type": "reference",
								"id": 797,
								"name": "CustomAuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 796,
						"name": "CustomAuthError.constructor"
					}
				},
				{
					"id": 826,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 801,
						"name": "CustomAuthError.name"
					}
				},
				{
					"id": 827,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 50,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 802,
						"name": "CustomAuthError.status"
					}
				},
				{
					"id": 828,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 57,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 829,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 830,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 832,
											"name": "message",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 60,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 831,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 59,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 833,
											"name": "status",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 61,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												832,
												831,
												833
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 804,
								"name": "CustomAuthError.toJSON"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 803,
						"name": "CustomAuthError.toJSON"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						823
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						826,
						827
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						828
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 72,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 795,
					"name": "CustomAuthError"
				}
			]
		},
		{
			"id": 860,
			"name": "AuthRetryableFetchError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 861,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 96,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 862,
							"name": "new AuthRetryableFetchError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 863,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 864,
									"name": "status",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 860,
								"name": "AuthRetryableFetchError"
							},
							"overwrites": {
								"type": "reference",
								"id": 797,
								"name": "CustomAuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 796,
						"name": "CustomAuthError.constructor"
					}
				},
				{
					"id": 865,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 801,
						"name": "CustomAuthError.name"
					}
				},
				{
					"id": 866,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 50,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 802,
						"name": "CustomAuthError.status"
					}
				},
				{
					"id": 867,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 57,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 868,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 869,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 871,
											"name": "message",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 60,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 870,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 59,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 872,
											"name": "status",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 61,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												871,
												870,
												872
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 804,
								"name": "CustomAuthError.toJSON"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 803,
						"name": "CustomAuthError.toJSON"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						861
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						865,
						866
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						867
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 95,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 795,
					"name": "CustomAuthError"
				}
			]
		},
		{
			"id": 810,
			"name": "AuthSessionMissingError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 811,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 67,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 812,
							"name": "new AuthSessionMissingError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 810,
								"name": "AuthSessionMissingError"
							},
							"overwrites": {
								"type": "reference",
								"id": 797,
								"name": "CustomAuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 796,
						"name": "CustomAuthError.constructor"
					}
				},
				{
					"id": 813,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 801,
						"name": "CustomAuthError.name"
					}
				},
				{
					"id": 814,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 50,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 802,
						"name": "CustomAuthError.status"
					}
				},
				{
					"id": 815,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 57,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 816,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 817,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 819,
											"name": "message",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 60,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 818,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 59,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 820,
											"name": "status",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 61,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												819,
												818,
												820
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 804,
								"name": "CustomAuthError.toJSON"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 803,
						"name": "CustomAuthError.toJSON"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						811
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						813,
						814
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						815
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 66,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 795,
					"name": "CustomAuthError"
				}
			]
		},
		{
			"id": 787,
			"name": "AuthUnknownError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 788,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 41,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 789,
							"name": "new AuthUnknownError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 790,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 791,
									"name": "originalError",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 787,
								"name": "AuthUnknownError"
							},
							"overwrites": {
								"type": "reference",
								"id": 769,
								"name": "AuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 768,
						"name": "AuthError.constructor"
					}
				},
				{
					"id": 792,
					"name": "originalError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 39,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 793,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 2,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 772,
						"name": "AuthError.status"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						788
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						792,
						793
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 38,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 767,
					"name": "AuthError"
				}
			]
		},
		{
			"id": 795,
			"name": "CustomAuthError",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 796,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 51,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 797,
							"name": "new CustomAuthError",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 798,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 799,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 800,
									"name": "status",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 795,
								"name": "CustomAuthError"
							},
							"overwrites": {
								"type": "reference",
								"id": 769,
								"name": "AuthError.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 768,
						"name": "AuthError.constructor"
					}
				},
				{
					"id": 801,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "AuthError.name"
					}
				},
				{
					"id": 802,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 50,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"overwrites": {
						"type": "reference",
						"id": 772,
						"name": "AuthError.status"
					}
				},
				{
					"id": 803,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/errors.ts",
							"line": 57,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 804,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 805,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 807,
											"name": "message",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 60,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 806,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 59,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 808,
											"name": "status",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/lib/errors.ts",
													"line": 61,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												807,
												806,
												808
											]
										}
									]
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						796
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						801,
						802
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						803
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 48,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 767,
					"name": "AuthError"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 810,
					"name": "AuthSessionMissingError"
				},
				{
					"type": "reference",
					"id": 822,
					"name": "AuthInvalidCredentialsError"
				},
				{
					"type": "reference",
					"id": 835,
					"name": "AuthImplicitGrantRedirectError"
				},
				{
					"type": "reference",
					"id": 860,
					"name": "AuthRetryableFetchError"
				}
			]
		},
		{
			"id": 1,
			"name": "GoTrueAdminApi",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 2,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueAdminApi.ts",
							"line": 35,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "new GoTrueAdminApi",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 4,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 11,
													"name": "fetch",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/GoTrueAdminApi.ts",
															"line": 44,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 12,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 13,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 14,
																			"name": "input",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "reference",
																						"qualifiedName": "RequestInfo",
																						"package": "typescript",
																						"name": "RequestInfo"
																					},
																					{
																						"type": "reference",
																						"qualifiedName": "URL",
																						"package": "typescript",
																						"name": "URL"
																					}
																				]
																			}
																		},
																		{
																			"id": 15,
																			"name": "init",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "reference",
																				"qualifiedName": "RequestInit",
																				"package": "typescript",
																				"name": "RequestInit"
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"qualifiedName": "Response",
																				"package": "typescript",
																				"name": "Response"
																			}
																		],
																		"qualifiedName": "Promise",
																		"package": "typescript",
																		"name": "Promise"
																	}
																}
															]
														}
													}
												},
												{
													"id": 7,
													"name": "headers",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/GoTrueAdminApi.ts",
															"line": 41,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 8,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"indexSignature": {
																"id": 9,
																"name": "__index",
																"kind": 8192,
																"kindString": "Index signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 10,
																		"name": "key",
																		"kind": 32768,
																		"flags": {},
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													}
												},
												{
													"id": 6,
													"name": "url",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/GoTrueAdminApi.ts",
															"line": 40,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														11,
														7,
														6
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"name": "default"
							}
						}
					]
				},
				{
					"id": 16,
					"name": "mfa",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Contains all MFA administration methods."
					},
					"sources": [
						{
							"fileName": "src/GoTrueAdminApi.ts",
							"line": 27,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 732,
						"name": "GoTrueAdminMFAApi"
					}
				},
				{
					"id": 43,
					"name": "createUser",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueAdminApi.ts",
							"line": 146,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 44,
							"name": "createUser",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a new user.\nThis function should only be called on a server. Never expose your `service_role` key in the browser."
							},
							"parameters": [
								{
									"id": 45,
									"name": "attributes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 437,
										"name": "AdminUserAttributes"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 361,
										"name": "UserResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 67,
					"name": "deleteUser",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueAdminApi.ts",
							"line": 262,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 68,
							"name": "deleteUser",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete a user. Requires a `service_role` key."
							},
							"parameters": [
								{
									"id": 69,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The user id you want to remove."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 70,
									"name": "shouldSoftDelete",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "If true, then the user will be soft-deleted from the auth schema.\nDefaults to false for backward compatibility.\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 361,
										"name": "UserResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 40,
					"name": "generateLink",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueAdminApi.ts",
							"line": 112,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 41,
							"name": "generateLink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates email links and OTPs to be sent via a custom email provider."
							},
							"parameters": [
								{
									"id": 42,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 576,
										"name": "GenerateLinkParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 577,
										"name": "GenerateLinkResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 60,
					"name": "getUserById",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueAdminApi.ts",
							"line": 215,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 61,
							"name": "getUserById",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get user by id."
							},
							"parameters": [
								{
									"id": 62,
									"name": "uid",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The user's unique identifier\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 361,
										"name": "UserResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 33,
					"name": "inviteUserByEmail",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueAdminApi.ts",
							"line": 82,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 34,
							"name": "inviteUserByEmail",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sends an invite link to an email address."
							},
							"parameters": [
								{
									"id": 35,
									"name": "email",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The email address of the user."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 36,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 37,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 39,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Optional user metadata\n"
													},
													"sources": [
														{
															"fileName": "src/GoTrueAdminApi.ts",
															"line": 86,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 38,
													"name": "redirectTo",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "A URL or mobile deeplink to send the user to after they are confirmed."
													},
													"sources": [
														{
															"fileName": "src/GoTrueAdminApi.ts",
															"line": 85,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														39,
														38
													]
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 361,
										"name": "UserResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 46,
					"name": "listUsers",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueAdminApi.ts",
							"line": 168,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 47,
							"name": "listUsers",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get a list of users.",
								"text": "This function should only be called on a server. Never expose your `service_role` key in the browser."
							},
							"parameters": [
								{
									"id": 48,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n"
									},
									"type": {
										"type": "reference",
										"id": 757,
										"name": "PageParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 49,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 50,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueAdminApi.ts",
																	"line": 171,
																	"character": 8
																}
															],
															"type": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 51,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 53,
																					"name": "aud",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/GoTrueAdminApi.ts",
																							"line": 171,
																							"character": 31
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 52,
																					"name": "users",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/GoTrueAdminApi.ts",
																							"line": 171,
																							"character": 16
																						}
																					],
																					"type": {
																						"type": "array",
																						"elementType": {
																							"type": "reference",
																							"id": 409,
																							"name": "User"
																						}
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						53,
																						52
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"id": 750,
																		"name": "Pagination"
																	}
																]
															}
														},
														{
															"id": 54,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueAdminApi.ts",
																	"line": 171,
																	"character": 59
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																50,
																54
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 55,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 56,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueAdminApi.ts",
																	"line": 172,
																	"character": 8
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 57,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 58,
																			"name": "users",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/GoTrueAdminApi.ts",
																					"line": 172,
																					"character": 16
																				}
																			],
																			"type": {
																				"type": "tuple"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"kind": 1024,
																			"children": [
																				58
																			]
																		}
																	]
																}
															}
														},
														{
															"id": 59,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueAdminApi.ts",
																	"line": 172,
																	"character": 29
																}
															],
															"type": {
																"type": "reference",
																"id": 767,
																"name": "AuthError"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																56,
																59
															]
														}
													]
												}
											}
										]
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 27,
					"name": "signOut",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueAdminApi.ts",
							"line": 59,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 28,
							"name": "signOut",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a logged-in session."
							},
							"parameters": [
								{
									"id": 29,
									"name": "jwt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A valid, logged-in JWT.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 30,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 31,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/GoTrueAdminApi.ts",
															"line": 59,
															"character": 40
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												},
												{
													"id": 32,
													"name": "error",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/GoTrueAdminApi.ts",
															"line": 59,
															"character": 52
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 767,
																"name": "AuthError"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														31,
														32
													]
												}
											]
										}
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 63,
					"name": "updateUserById",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueAdminApi.ts",
							"line": 237,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 64,
							"name": "updateUserById",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Updates the user data."
							},
							"parameters": [
								{
									"id": 65,
									"name": "uid",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 66,
									"name": "attributes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The data you want to update.\n\nThis function should only be called on a server. Never expose your `service_role` key in the browser.\n"
									},
									"type": {
										"type": "reference",
										"id": 437,
										"name": "AdminUserAttributes"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 361,
										"name": "UserResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						16
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						43,
						67,
						40,
						60,
						33,
						46,
						27,
						63
					]
				}
			],
			"sources": [
				{
					"fileName": "src/GoTrueAdminApi.ts",
					"line": 25,
					"character": 21
				}
			]
		},
		{
			"id": 77,
			"name": "GoTrueClient",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 78,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 136,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 79,
							"name": "new GoTrueClient",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new client for use in the browser."
							},
							"parameters": [
								{
									"id": 80,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 313,
										"name": "GoTrueClientOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 77,
								"name": "default"
							}
						}
					]
				},
				{
					"id": 81,
					"name": "admin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Namespace for the GoTrue admin methods.\nThese methods should only be used in a trusted server-side environment."
					},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 91,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "default"
					}
				},
				{
					"id": 82,
					"name": "mfa",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Namespace for the MFA methods."
					},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 95,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 687,
						"name": "GoTrueMFAApi"
					}
				},
				{
					"id": 132,
					"name": "getSession",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 555,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 133,
							"name": "getSession",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the session, refreshing it if necessary.\nThe session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 134,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 135,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 557,
																	"character": 8
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 136,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 137,
																			"name": "session",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/GoTrueClient.ts",
																					"line": 558,
																					"character": 10
																				}
																			],
																			"type": {
																				"type": "reference",
																				"id": 372,
																				"name": "Session"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"kind": 1024,
																			"children": [
																				137
																			]
																		}
																	]
																}
															}
														},
														{
															"id": 138,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 560,
																	"character": 8
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																135,
																138
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 139,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 140,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 563,
																	"character": 8
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 141,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 142,
																			"name": "session",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/GoTrueClient.ts",
																					"line": 564,
																					"character": 10
																				}
																			],
																			"type": {
																				"type": "literal",
																				"value": null
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"kind": 1024,
																			"children": [
																				142
																			]
																		}
																	]
																}
															}
														},
														{
															"id": 143,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 566,
																	"character": 8
																}
															],
															"type": {
																"type": "reference",
																"id": 767,
																"name": "AuthError"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																140,
																143
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 144,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 145,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 569,
																	"character": 8
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 146,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 147,
																			"name": "session",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/GoTrueClient.ts",
																					"line": 570,
																					"character": 10
																				}
																			],
																			"type": {
																				"type": "literal",
																				"value": null
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"kind": 1024,
																			"children": [
																				147
																			]
																		}
																	]
																}
															}
														},
														{
															"id": 148,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 572,
																	"character": 8
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																145,
																148
															]
														}
													]
												}
											}
										]
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 149,
					"name": "getUser",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 618,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 150,
							"name": "getUser",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the current user details if there is an existing session."
							},
							"parameters": [
								{
									"id": 151,
									"name": "jwt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Takes in an optional access token jwt. If no jwt is provided, getUser() will attempt to get the jwt from the current session.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 361,
										"name": "UserResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 107,
					"name": "initialize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 179,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 108,
							"name": "initialize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Initializes the client session either from the url or from storage.\nThis method is automatically called when instantiating the client, but should also be called\nmanually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc)."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 740,
										"name": "InitializeResult"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 196,
					"name": "onAuthStateChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 909,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 197,
							"name": "onAuthStateChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Receive a notification every time an auth event happens."
							},
							"parameters": [
								{
									"id": 198,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A callback function to be invoked when an auth event happens.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 199,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 200,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 201,
															"name": "event",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 312,
																"name": "AuthChangeEvent"
															}
														},
														{
															"id": 202,
															"name": "session",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"id": 372,
																		"name": "Session"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 203,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 204,
											"name": "data",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/GoTrueClient.ts",
													"line": 910,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 205,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 206,
															"name": "subscription",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 910,
																	"character": 12
																}
															],
															"type": {
																"type": "reference",
																"id": 446,
																"name": "Subscription"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																206
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												204
											]
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 171,
					"name": "refreshSession",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 764,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 172,
							"name": "refreshSession",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new session, regardless of expiry status.\nTakes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\nIf the current session's refresh token is invalid, an error will be thrown."
							},
							"parameters": [
								{
									"id": 173,
									"name": "currentSession",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The current session. If passed in, it must contain a refresh token.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 174,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 175,
													"name": "refresh_token",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/GoTrueClient.ts",
															"line": 764,
															"character": 42
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														175
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 326,
										"name": "AuthResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 207,
					"name": "resetPasswordForEmail",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 932,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 208,
							"name": "resetPasswordForEmail",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sends a password reset request to an email address."
							},
							"parameters": [
								{
									"id": 209,
									"name": "email",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The email address of the user."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 210,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 211,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 213,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site.\n"
													},
													"sources": [
														{
															"fileName": "src/GoTrueClient.ts",
															"line": 936,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 212,
													"name": "redirectTo",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "The URL to send the user to after they click the password reset link."
													},
													"sources": [
														{
															"fileName": "src/GoTrueClient.ts",
															"line": 935,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														213,
														212
													]
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 214,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 215,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 940,
																	"character": 8
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 216,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {}
																}
															}
														},
														{
															"id": 217,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 941,
																	"character": 8
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																215,
																217
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 218,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 219,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 943,
																	"character": 8
																}
															],
															"type": {
																"type": "literal",
																"value": null
															}
														},
														{
															"id": 220,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/GoTrueClient.ts",
																	"line": 943,
																	"character": 20
																}
															],
															"type": {
																"type": "reference",
																"id": 767,
																"name": "AuthError"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																219,
																220
															]
														}
													]
												}
											}
										]
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 165,
					"name": "setSession",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 700,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 166,
							"name": "setSession",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\nIf the refresh token or access token in the current session is invalid, an error will be thrown."
							},
							"parameters": [
								{
									"id": 167,
									"name": "currentSession",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The current session that minimally contains an access token and refresh token.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 168,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 169,
													"name": "access_token",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/GoTrueClient.ts",
															"line": 701,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 170,
													"name": "refresh_token",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/GoTrueClient.ts",
															"line": 702,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														169,
														170
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 326,
										"name": "AuthResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 120,
					"name": "signInWithIdToken",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 380,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 121,
							"name": "signInWithIdToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Allows signing in with an ID token issued by certain supported providers.\nThe ID token is verified for validity and a new session is established.",
								"tags": [
									{
										"tag": "experimental",
										"text": "\n"
									}
								]
							},
							"parameters": [
								{
									"id": 122,
									"name": "credentials",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 514,
										"name": "SignInWithIdTokenCredentials"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 326,
										"name": "AuthResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 117,
					"name": "signInWithOAuth",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 364,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 118,
							"name": "signInWithOAuth",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Log in an existing user via a third-party provider."
							},
							"parameters": [
								{
									"id": 119,
									"name": "credentials",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 502,
										"name": "SignInWithOAuthCredentials"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 339,
										"name": "OAuthResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 123,
					"name": "signInWithOtp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 423,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 124,
							"name": "signInWithOtp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Log in a user using magiclink or a one-time password (OTP).",
								"text": "If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\nIf the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\nIf you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n\nBe aware that you may get back an error message that will not distinguish\nbetween the cases where the account does not exist or, that the account\ncan only be accessed via social login.\n"
							},
							"parameters": [
								{
									"id": 125,
									"name": "credentials",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 486,
										"name": "SignInWithPasswordlessCredentials"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 326,
										"name": "AuthResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 114,
					"name": "signInWithPassword",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 314,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 115,
							"name": "signInWithPassword",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Log in an existing user with an email and password or phone and password.",
								"text": "Be aware that you may get back an error message that will not distingish\nbetween the cases where the account does not exist or that the\nemail/phone and password combination is wrong or that the account can only\nbe accessed via social login.\n"
							},
							"parameters": [
								{
									"id": 116,
									"name": "credentials",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 472,
										"name": "SignInWithPasswordCredentials"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 326,
										"name": "AuthResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 129,
					"name": "signInWithSSO",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 526,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 130,
							"name": "signInWithSSO",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Attempts a single-sign on using an enterprise Identity Provider. A\nsuccessful SSO attempt will redirect the current page to the identity\nprovider authorization page. The redirect URL is implementation and SSO\nprotocol specific.",
								"text": "You can use it by providing a SSO domain. Typically you can extract this\ndomain by asking users for their email address. If this domain is\nregistered on the Auth instance the redirect will use that organization's\ncurrently active SSO Identity Provider for the login.\n\nIf you have built an organization-specific login page, you can use the\norganization's SSO Identity Provider UUID directly instead.\n\nThis API is experimental and availability is conditional on correct\nsettings on the Auth service.\n",
								"tags": [
									{
										"tag": "experimental",
										"text": "\n"
									}
								]
							},
							"parameters": [
								{
									"id": 131,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 541,
										"name": "SignInWithSSO"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 352,
										"name": "SSOResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 192,
					"name": "signOut",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 884,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 193,
							"name": "signOut",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Inside a browser context, `signOut()` will remove the logged in user from the browser session\nand log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.",
								"text": "For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\nThere is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 194,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 195,
													"name": "error",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/GoTrueClient.ts",
															"line": 884,
															"character": 29
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"id": 767,
																"name": "AuthError"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														195
													]
												}
											]
										}
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 111,
					"name": "signUp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 246,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 112,
							"name": "signUp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a new user.",
								"text": "Be aware that if a user account exists in the system you may get back an\nerror message that attempts to hide this information from the user.\n",
								"returns": "A logged-in session if the server has \"autoconfirm\" ON"
							},
							"parameters": [
								{
									"id": 113,
									"name": "credentials",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 456,
										"name": "SignUpWithPasswordCredentials"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 326,
										"name": "AuthResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 269,
					"name": "startAutoRefresh",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 1218,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 270,
							"name": "startAutoRefresh",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Starts an auto-refresh process in the background. The session is checked\nevery few seconds. Close to the time of expiration a process is started to\nrefresh the session. If refreshing fails it will be retried for as long as\nnecessary.",
								"text": "If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\nto call this function, it will be called for you.\n\nOn browsers the refresh process works only when the tab/window is in the\nforeground to conserve resources as well as prevent race conditions and\nflooding auth with requests. If you call this method any managed\nvisibility change callback will be removed and you must manage visibility\nchanges on your own.\n\nOn non-browser platforms the refresh process works *continuously* in the\nbackground, which may not be desireable. You should hook into your\nplatform's foreground indication mechanism and call these methods\nappropriately to conserve resources.\n\n{@see #stopAutoRefresh}\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 271,
					"name": "stopAutoRefresh",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 1231,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 272,
							"name": "stopAutoRefresh",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Stops an active auto refresh process running in the background (if any).",
								"text": "If you call this method any managed visibility change callback will be\nremoved and you must manage visibility changes on your own.\n\nSee {@link #startAutoRefresh} for more details.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 152,
					"name": "updateUser",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 647,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 153,
							"name": "updateUser",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Updates user data for a logged in user."
							},
							"parameters": [
								{
									"id": 154,
									"name": "attributes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 432,
										"name": "UserAttributes"
									}
								},
								{
									"id": 155,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 156,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 157,
													"name": "emailRedirectTo",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/GoTrueClient.ts",
															"line": 650,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														157
													]
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 361,
										"name": "UserResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 126,
					"name": "verifyOtp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/GoTrueClient.ts",
							"line": 467,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 127,
							"name": "verifyOtp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Log in a user given a User supplied OTP received via mobile."
							},
							"parameters": [
								{
									"id": 128,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 522,
										"name": "VerifyOtpParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 326,
										"name": "AuthResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						78
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						81,
						82
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						132,
						149,
						107,
						196,
						171,
						207,
						165,
						120,
						117,
						123,
						114,
						129,
						192,
						111,
						269,
						271,
						152,
						126
					]
				}
			],
			"sources": [
				{
					"fileName": "src/GoTrueClient.ts",
					"line": 86,
					"character": 21
				}
			]
		},
		{
			"id": 381,
			"name": "AMREntry",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "An authentication methord reference (AMR) entry.",
				"text": "An entry designates what method was used by the user to verify their\nidentity and at what time.\n",
				"tags": [
					{
						"tag": "see",
						"text": "{@link GoTrueMFAApi#getAuthenticatorAssuranceLevel}.\n"
					}
				]
			},
			"children": [
				{
					"id": 382,
					"name": "method",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Authentication method name."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 152,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 383,
					"name": "timestamp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Timestamp when the method was successfully used. Represents number of\nseconds since 1st January 1970 (UNIX epoch) in UTC."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 158,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						382,
						383
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 150,
					"character": 17
				}
			]
		},
		{
			"id": 437,
			"name": "AdminUserAttributes",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 439,
					"name": "app_metadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A custom data object to store the user's application specific metadata. This maps to the `auth.users.app_metadata` column.",
						"text": "Only a service role can modify.\n\nThe `app_metadata` should be a JSON object that includes app-specific info, such as identity providers, roles, and other\naccess control information.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 281,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 442,
					"name": "ban_duration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Determines how long a user is banned for.",
						"text": "The format for the ban duration follows a strict sequence of decimal numbers with a unit suffix.\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".\n\nFor example, some possible durations include: '300ms', '2h45m'.\n\nSetting the ban duration to 'none' lifts the ban on the user.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 307,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 444,
					"name": "email",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The user's email."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 238,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.email"
					}
				},
				{
					"id": 440,
					"name": "email_confirm",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Confirms the user's email address if set to true.",
						"text": "Only a service role can modify.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 288,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 443,
					"name": "password",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The user's password."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 248,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.password"
					}
				},
				{
					"id": 445,
					"name": "phone",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The user's phone."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 243,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.phone"
					}
				},
				{
					"id": 441,
					"name": "phone_confirm",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Confirms the user's phone number if set to true.",
						"text": "Only a service role can modify.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 295,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 438,
					"name": "user_metadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
						"text": "Only a service role can modify.\n\nThe `user_metadata` should be a JSON object that includes user-specific info, such as their first and last name.\n\nNote: When using the GoTrueAdminApi and wanting to modify a user's metadata,\nthis attribute is used instead of UserAttributes data.\n\n"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 271,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						439,
						442,
						444,
						440,
						443,
						445,
						441,
						438
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 259,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 432,
							"name": "UserAttributes"
						},
						{
							"type": "literal",
							"value": "data"
						}
					],
					"qualifiedName": "Omit",
					"package": "typescript",
					"name": "Omit"
				}
			]
		},
		{
			"id": 395,
			"name": "Factor",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "A MFA factor.",
				"tags": [
					{
						"tag": "see",
						"text": "{@link GoTrueMFAApi#enroll}"
					},
					{
						"tag": "see",
						"text": "{@link GoTrueMFAApi#listFactors}"
					},
					{
						"tag": "see",
						"text": "{@link GoTrueMFAAdminApi#listFactors}\n"
					}
				]
			},
			"children": [
				{
					"id": 400,
					"name": "created_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 196,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 398,
					"name": "factor_type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Type of factor. Only `totp` supported with this version but may change in\nfuture versions."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 191,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 397,
					"name": "friendly_name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Friendly name of the factor, useful to disambiguate between multiple factors."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 185,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 396,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "ID of the factor."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 182,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 399,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Factor's status."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 194,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "verified"
							},
							{
								"type": "literal",
								"value": "unverified"
							}
						]
					}
				},
				{
					"id": 401,
					"name": "updated_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 197,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						400,
						398,
						397,
						396,
						399,
						401
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 180,
					"character": 17
				}
			]
		},
		{
			"id": 573,
			"name": "GenerateLinkOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 574,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
						"text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 552,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 575,
					"name": "redirectTo",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The URL which will be appended to the email link generated."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 554,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						574,
						575
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 546,
					"character": 17
				}
			]
		},
		{
			"id": 732,
			"name": "GoTrueAdminMFAApi",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Contains the full multi-factor authentication administration API.",
				"tags": [
					{
						"tag": "expermental",
						"text": "\n"
					}
				]
			},
			"children": [
				{
					"id": 736,
					"name": "deleteFactor",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 737,
							"name": "deleteFactor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Deletes a factor on a user. This will log the user out of all active\nsessions if the deleted factor was verified.",
								"tags": [
									{
										"tag": "see",
										"text": "{@link GoTrueMFAApi#unenroll}\n"
									},
									{
										"tag": "expermental",
										"text": "\n"
									}
								]
							},
							"parameters": [
								{
									"id": 738,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 716,
										"name": "AuthMFAAdminDeleteFactorParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 707,
										"name": "AuthMFAAdminDeleteFactorResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 733,
					"name": "listFactors",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 734,
							"name": "listFactors",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Lists all factors associated to a user."
							},
							"parameters": [
								{
									"id": 735,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 729,
										"name": "AuthMFAAdminListFactorsParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 720,
										"name": "AuthMFAAdminListFactorsResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						736,
						733
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 884,
					"character": 17
				}
			]
		},
		{
			"id": 687,
			"name": "GoTrueMFAApi",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Contains the full multi-factor authentication API."
			},
			"children": [
				{
					"id": 691,
					"name": "challenge",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 692,
							"name": "challenge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Prepares a challenge used to verify that a user has access to a MFA\nfactor."
							},
							"parameters": [
								{
									"id": 693,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 611,
										"name": "MFAChallengeParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 655,
										"name": "AuthMFAChallengeResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 700,
					"name": "challengeAndVerify",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 701,
							"name": "challengeAndVerify",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Helper method which creates a challenge and immediately uses the given code to verify against it thereafter. The verification code is\nprovided by the user by entering a code seen in their authenticator app."
							},
							"parameters": [
								{
									"id": 702,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 614,
										"name": "MFAChallengeAndVerifyParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 618,
										"name": "AuthMFAVerifyResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 688,
					"name": "enroll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 689,
							"name": "enroll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Starts the enrollment process for a new Multi-Factor Authentication (MFA)\nfactor. This method creates a new `unverified` factor.\nTo verify a factor, present the QR code or secret to the user and ask them to add it to their\nauthenticator app.\nThe user has to enter the code from their authenticator app to verify it.",
								"text": "Upon verifying a factor, all other sessions are logged out and the current session's authenticator level is promoted to `aal2`.\n\n"
							},
							"parameters": [
								{
									"id": 690,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 598,
										"name": "MFAEnrollParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 631,
										"name": "AuthMFAEnrollResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 705,
					"name": "getAuthenticatorAssuranceLevel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 706,
							"name": "getAuthenticatorAssuranceLevel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the Authenticator Assurance Level (AAL) for the active session.",
								"text": "- `aal1` (or `null`) means that the user's identity has been verified only\nwith a conventional login (email+password, OTP, magic link, social login,\netc.).\n- `aal2` means that the user's identity has been verified both with a conventional login and at least one MFA factor.\n\nAlthough this method returns a promise, it's fairly quick (microseconds)\nand rarely uses the network. You can use this to check whether the current\nuser needs to be shown a screen to verify their MFA factors.\n\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 676,
										"name": "AuthMFAGetAuthenticatorAssuranceLevelResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 703,
					"name": "listFactors",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 704,
							"name": "listFactors",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the list of MFA factors enabled for this user.",
								"tags": [
									{
										"tag": "see",
										"text": "{@link GoTrueMFAApi#enroll}"
									},
									{
										"tag": "see",
										"text": "{@link GoTrueMFAApi#getAuthenticatorAssuranceLevel}"
									},
									{
										"tag": "see",
										"text": "{@link GoTrueClient#getUser}\n\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 665,
										"name": "AuthMFAListFactorsResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 697,
					"name": "unenroll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 698,
							"name": "unenroll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Unenroll removes a MFA factor.\nA user has to have an `aal2` authenticator level in order to unenroll a `verified` factor."
							},
							"parameters": [
								{
									"id": 699,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 603,
										"name": "MFAUnenrollParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 646,
										"name": "AuthMFAUnenrollResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 694,
					"name": "verify",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 695,
							"name": "verify",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Verifies a code against a challenge. The verification code is\nprovided by the user by entering a code seen in their authenticator app."
							},
							"parameters": [
								{
									"id": 696,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 606,
										"name": "MFAVerifyParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 618,
										"name": "AuthMFAVerifyResponse"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						691,
						700,
						688,
						705,
						703,
						697,
						694
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 771,
					"character": 17
				}
			]
		},
		{
			"id": 372,
			"name": "Session",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 375,
					"name": "access_token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The access token jwt. It is recommended to set the JWT_EXPIRY to a shorter expiry value."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 125,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 378,
					"name": "expires_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A timestamp of when the token will expire. Returned when a login is confirmed."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 137,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 377,
					"name": "expires_in",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The number of seconds until the token expires (since it was issued). Returned when a login is confirmed."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 133,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 374,
					"name": "provider_refresh_token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The oauth provider refresh token. If present, this can be used to refresh the provider_token via the oauth provider's API.\nNot all oauth providers return a provider refresh token. If the provider_refresh_token is missing, please refer to the oauth provider's documentation for information on how to obtain the provider refresh token."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 121,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 373,
					"name": "provider_token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The oauth provider token. If present, this can be used to make external API requests to the oauth provider used."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 116,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 376,
					"name": "refresh_token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "A one-time used refresh token that never expires."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 129,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 379,
					"name": "token_type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 138,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 380,
					"name": "user",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 139,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 409,
						"name": "User"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						375,
						378,
						377,
						374,
						373,
						376,
						379,
						380
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 112,
					"character": 17
				}
			]
		},
		{
			"id": 446,
			"name": "Subscription",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 447,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The subscriber UUID. This will be set by the client."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 314,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 448,
					"name": "callback",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 318,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 449,
							"name": "callback",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "The function to call every time there is an event. eg: (eventName) => {}"
							},
							"parameters": [
								{
									"id": 450,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 312,
										"name": "AuthChangeEvent"
									}
								},
								{
									"id": 451,
									"name": "session",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 372,
												"name": "Session"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 452,
					"name": "unsubscribe",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 322,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 453,
							"name": "unsubscribe",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Call this to remove the listener."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						447
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						448,
						452
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 310,
					"character": 17
				}
			]
		},
		{
			"id": 454,
			"name": "UpdatableFactorAttributes",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 455,
					"name": "friendlyName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 326,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						455
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 325,
					"character": 17
				}
			]
		},
		{
			"id": 409,
			"name": "User",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 420,
					"name": "action_link",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 220,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 411,
					"name": "app_metadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 211,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 402,
						"name": "UserAppMetadata"
					}
				},
				{
					"id": 413,
					"name": "aud",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 213,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 414,
					"name": "confirmation_sent_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 214,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 424,
					"name": "confirmed_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 224,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 423,
					"name": "created_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 223,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 421,
					"name": "email",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 221,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 416,
					"name": "email_change_sent_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 216,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 425,
					"name": "email_confirmed_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 225,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 431,
					"name": "factors",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 231,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 395,
							"name": "Factor"
						}
					}
				},
				{
					"id": 410,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 210,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 430,
					"name": "identities",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 230,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 384,
							"name": "UserIdentity"
						}
					}
				},
				{
					"id": 419,
					"name": "invited_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 219,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 427,
					"name": "last_sign_in_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 227,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 417,
					"name": "new_email",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 217,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 418,
					"name": "new_phone",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 218,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 422,
					"name": "phone",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 222,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 426,
					"name": "phone_confirmed_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 226,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 415,
					"name": "recovery_sent_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 215,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 428,
					"name": "role",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 228,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 429,
					"name": "updated_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 229,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 412,
					"name": "user_metadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 212,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 406,
						"name": "UserMetadata"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						420,
						411,
						413,
						414,
						424,
						423,
						421,
						416,
						425,
						431,
						410,
						430,
						419,
						427,
						417,
						418,
						422,
						426,
						415,
						428,
						429,
						412
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 209,
					"character": 17
				}
			]
		},
		{
			"id": 402,
			"name": "UserAppMetadata",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 403,
					"name": "provider",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 201,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						403
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 200,
					"character": 17
				}
			],
			"indexSignature": {
				"id": 404,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"parameters": [
					{
						"id": 405,
						"name": "key",
						"kind": 32768,
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "intrinsic",
					"name": "any"
				}
			}
		},
		{
			"id": 432,
			"name": "UserAttributes",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 436,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
						"text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n\n"
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 256,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 433,
					"name": "email",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The user's email."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 238,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 435,
					"name": "password",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The user's password."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 248,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 434,
					"name": "phone",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The user's phone."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 243,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						436,
						433,
						435,
						434
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 234,
					"character": 17
				}
			]
		},
		{
			"id": 384,
			"name": "UserIdentity",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 392,
					"name": "created_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 168,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 385,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 162,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 387,
					"name": "identity_data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 164,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 388,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 389,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 390,
										"name": "key",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					}
				},
				{
					"id": 393,
					"name": "last_sign_in_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 169,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 391,
					"name": "provider",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 167,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 394,
					"name": "updated_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 170,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 386,
					"name": "user_id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 163,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						392,
						385,
						387,
						393,
						391,
						394,
						386
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 161,
					"character": 17
				}
			]
		},
		{
			"id": 406,
			"name": "UserMetadata",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 205,
					"character": 17
				}
			],
			"indexSignature": {
				"id": 407,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"parameters": [
					{
						"id": 408,
						"name": "key",
						"kind": 32768,
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "intrinsic",
					"name": "any"
				}
			}
		},
		{
			"id": 531,
			"name": "VerifyEmailOtpParams",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 532,
					"name": "email",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The user's email address."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 480,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 535,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 485,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 536,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 538,
									"name": "captchaToken",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Verification token received when the user completes the captcha on the site."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 489,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 537,
									"name": "redirectTo",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "A URL to send the user to after they are confirmed."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 487,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										538,
										537
									]
								}
							]
						}
					}
				},
				{
					"id": 533,
					"name": "token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The otp sent to the user's email address."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 482,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 534,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The user's verification type."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 484,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 540,
						"name": "EmailOtpType"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						532,
						535,
						533,
						534
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 478,
					"character": 17
				}
			]
		},
		{
			"id": 523,
			"name": "VerifyMobileOtpParams",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 527,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 466,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 528,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 530,
									"name": "captchaToken",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Verification token received when the user completes the captcha on the site.",
										"tags": [
											{
												"tag": "deprecated",
												"text": "\n"
											}
										]
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 475,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 529,
									"name": "redirectTo",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "A URL to send the user to after they are confirmed."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 468,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										530,
										529
									]
								}
							]
						}
					}
				},
				{
					"id": 524,
					"name": "phone",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The user's phone number."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 461,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 525,
					"name": "token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The otp sent to the user's phone number."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 463,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 526,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The user's verification type."
					},
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 465,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 539,
						"name": "MobileOtpType"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						527,
						524,
						525,
						526
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 459,
					"character": 17
				}
			]
		},
		{
			"id": 312,
			"name": "AuthChangeEvent",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 25,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "PASSWORD_RECOVERY"
					},
					{
						"type": "literal",
						"value": "SIGNED_IN"
					},
					{
						"type": "literal",
						"value": "SIGNED_OUT"
					},
					{
						"type": "literal",
						"value": "TOKEN_REFRESHED"
					},
					{
						"type": "literal",
						"value": "USER_UPDATED"
					},
					{
						"type": "literal",
						"value": "USER_DELETED"
					},
					{
						"type": "reference",
						"id": 311,
						"name": "AuthChangeEventMFA"
					}
				]
			}
		},
		{
			"id": 311,
			"name": "AuthChangeEventMFA",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 23,
					"character": 12
				}
			],
			"type": {
				"type": "literal",
				"value": "MFA_CHALLENGE_VERIFIED"
			}
		},
		{
			"id": 716,
			"name": "AuthMFAAdminDeleteFactorParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"tags": [
					{
						"tag": "expermental",
						"text": "\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 850,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 717,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 718,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "ID of the MFA factor to delete."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 852,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 719,
							"name": "userId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "ID of the user whose factor is being deleted."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 855,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								718,
								719
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 850,
							"character": 45
						}
					]
				}
			}
		},
		{
			"id": 707,
			"name": "AuthMFAAdminDeleteFactorResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"tags": [
					{
						"tag": "expermental",
						"text": "\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 837,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 708,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 709,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 839,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 710,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 711,
													"name": "id",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "ID of the factor that was successfully deleted."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 841,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														711
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 839,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 712,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 843,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										709,
										712
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 838,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 713,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 714,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 845,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 715,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 845,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"id": 767,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										714,
										715
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 845,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 729,
			"name": "AuthMFAAdminListFactorsParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"tags": [
					{
						"tag": "expermental",
						"text": "\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 874,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 730,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 731,
							"name": "userId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "ID of the user."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 876,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								731
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 874,
							"character": 44
						}
					]
				}
			}
		},
		{
			"id": 720,
			"name": "AuthMFAAdminListFactorsResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"tags": [
					{
						"tag": "expermental",
						"text": "\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 861,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 721,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 722,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 863,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 723,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 724,
													"name": "factors",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "All factors attached to the user."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 865,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 395,
															"name": "Factor"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														724
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 863,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 725,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 867,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										722,
										725
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 862,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 726,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 727,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 869,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 728,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 869,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"id": 767,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										727,
										728
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 869,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 655,
			"name": "AuthMFAChallengeResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 714,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 656,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 657,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 716,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 658,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 660,
													"name": "expires_at",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Timestamp in UNIX seconds when this challenge will no longer be usable."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 721,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 659,
													"name": "id",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "ID of the newly created challenge."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 718,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														660,
														659
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 716,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 661,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 723,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										657,
										661
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 715,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 662,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 663,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 725,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 664,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 725,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"id": 767,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										663,
										664
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 725,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 631,
			"name": "AuthMFAEnrollResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 671,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 632,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 633,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 673,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 634,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 635,
													"name": "id",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "ID of the factor that was just enrolled (in an unverified state)."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 675,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 637,
													"name": "totp",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "TOTP enrollment information."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 681,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 638,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 639,
																	"name": "qr_code",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"comment": {
																		"shortText": "Contains a QR code encoding the authenticator URI. You can\nconvert it to a URL by prepending `data:image/svg+xml;utf-8,` to\nthe value. Avoid logging this value to the console."
																	},
																	"sources": [
																		{
																			"fileName": "src/lib/types.ts",
																			"line": 685,
																			"character": 10
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 640,
																	"name": "secret",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"comment": {
																		"shortText": "The TOTP secret (also encoded in the QR code). Show this secret\nin a password-style field to the user, in case they are unable to\nscan the QR code. Avoid logging this value to the console."
																	},
																	"sources": [
																		{
																			"fileName": "src/lib/types.ts",
																			"line": 690,
																			"character": 10
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 641,
																	"name": "uri",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"comment": {
																		"shortText": "The authenticator URI encoded within the QR code, should you need\nto use it. Avoid loggin this value to the console."
																	},
																	"sources": [
																		{
																			"fileName": "src/lib/types.ts",
																			"line": 694,
																			"character": 10
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		639,
																		640,
																		641
																	]
																}
															],
															"sources": [
																{
																	"fileName": "src/lib/types.ts",
																	"line": 681,
																	"character": 14
																}
															]
														}
													}
												},
												{
													"id": 636,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Type of MFA factor. Only `totp` supported for now."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 678,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": "totp"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														635,
														637,
														636
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 673,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 642,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 697,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										633,
										642
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 672,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 643,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 644,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 700,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 645,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 701,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 767,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										644,
										645
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 699,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 676,
			"name": "AuthMFAGetAuthenticatorAssuranceLevelResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 742,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 677,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 678,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 744,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 679,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 682,
													"name": "currentAuthenticationMethods",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "A list of all authentication methods attached to this session. Use\nthe information here to detect the last time a user verified a\nfactor, for example if implementing a step-up scenario."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 761,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 381,
															"name": "AMREntry"
														}
													}
												},
												{
													"id": 680,
													"name": "currentLevel",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Current AAL level of the session."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 746,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 675,
																"name": "AuthenticatorAssuranceLevels"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												},
												{
													"id": 681,
													"name": "nextLevel",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Next possible AAL level for the session. If the next level is higher\nthan the current one, the user should go through MFA.",
														"tags": [
															{
																"tag": "see",
																"text": "{@link GoTrueMFAApi#challenge}\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 754,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 675,
																"name": "AuthenticatorAssuranceLevels"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														682,
														680,
														681
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 744,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 683,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 763,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										678,
										683
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 743,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 684,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 685,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 765,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 686,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 765,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"id": 767,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										685,
										686
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 765,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 665,
			"name": "AuthMFAListFactorsResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 727,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 666,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 667,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 729,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 668,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 669,
													"name": "all",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "All available factors (verified and unverified)."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 731,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 395,
															"name": "Factor"
														}
													}
												},
												{
													"id": 670,
													"name": "totp",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Only verified TOTP factors. (A subset of `all`.)"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 734,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 395,
															"name": "Factor"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														669,
														670
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 729,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 671,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 736,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										667,
										671
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 728,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 672,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 673,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 738,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 674,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 738,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"id": 767,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										673,
										674
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 738,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 646,
			"name": "AuthMFAUnenrollResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 704,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 647,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 648,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 706,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 649,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 650,
													"name": "id",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "ID of the factor that was successfully unenrolled."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 708,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														650
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 706,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 651,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 710,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										648,
										651
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 705,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 652,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 653,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 712,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 654,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 712,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"id": 767,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										653,
										654
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 712,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 618,
			"name": "AuthMFAVerifyResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 646,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 619,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 620,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 648,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 621,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 622,
													"name": "access_token",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "New access token (JWT) after successful verification."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 650,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 624,
													"name": "expires_in",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Number of seconds in which the access token will expire."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 656,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 625,
													"name": "refresh_token",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Refresh token you can use to obtain new access tokens when expired."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 659,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 623,
													"name": "token_type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Type of token, typically `Bearer`."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 653,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 626,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "Updated user profile."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 662,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 409,
														"name": "User"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														622,
														624,
														625,
														623,
														626
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 648,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 627,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 664,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										620,
										627
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 647,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 628,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 629,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 667,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 630,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 668,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 767,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										629,
										630
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 666,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 326,
			"name": "AuthResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 53,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 327,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 328,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 55,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 329,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 331,
													"name": "session",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 57,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 372,
																"name": "Session"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												},
												{
													"id": 330,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 56,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"id": 409,
																"name": "User"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														331,
														330
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 55,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 332,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 59,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										328,
										332
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 54,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 333,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 334,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 62,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 335,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 337,
													"name": "session",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 64,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												},
												{
													"id": 336,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 63,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														337,
														336
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 62,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 338,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 66,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 767,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										334,
										338
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 61,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 675,
			"name": "AuthenticatorAssuranceLevels",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 740,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "aal1"
					},
					{
						"type": "literal",
						"value": "aal2"
					}
				]
			}
		},
		{
			"id": 743,
			"name": "CallRefreshTokenResult",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 915,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 744,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 746,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 918,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 745,
									"name": "session",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 917,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 372,
										"name": "Session"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										746,
										745
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 916,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 747,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 749,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 922,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 767,
										"name": "AuthError"
									}
								},
								{
									"id": 748,
									"name": "session",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 921,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										749,
										748
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 920,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 540,
			"name": "EmailOtpType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 494,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "signup"
					},
					{
						"type": "literal",
						"value": "invite"
					},
					{
						"type": "literal",
						"value": "magiclink"
					},
					{
						"type": "literal",
						"value": "recovery"
					},
					{
						"type": "literal",
						"value": "email_change"
					}
				]
			}
		},
		{
			"id": 567,
			"name": "GenerateEmailChangeLinkParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 535,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 568,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 570,
							"name": "email",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The user's email"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 538,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 571,
							"name": "newEmail",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The user's new email. Only required if type is 'email_change_current' or 'email_change_new'."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 542,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 572,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 543,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 573,
										"name": "GenerateLinkOptions"
									},
									{
										"type": "literal",
										"value": "redirectTo"
									}
								],
								"qualifiedName": "Pick",
								"package": "typescript",
								"name": "Pick"
							}
						},
						{
							"id": 569,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 536,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "email_change_current"
									},
									{
										"type": "literal",
										"value": "email_change_new"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								570,
								571,
								572,
								569
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 535,
							"character": 44
						}
					]
				}
			}
		},
		{
			"id": 557,
			"name": "GenerateInviteOrMagiclinkParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 521,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 558,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 560,
							"name": "email",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The user's email"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 524,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 561,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 525,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 573,
										"name": "GenerateLinkOptions"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "data"
											},
											{
												"type": "literal",
												"value": "redirectTo"
											}
										]
									}
								],
								"qualifiedName": "Pick",
								"package": "typescript",
								"name": "Pick"
							}
						},
						{
							"id": 559,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 522,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "invite"
									},
									{
										"type": "literal",
										"value": "magiclink"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								560,
								561,
								559
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 521,
							"character": 46
						}
					]
				}
			}
		},
		{
			"id": 576,
			"name": "GenerateLinkParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 557,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 551,
						"name": "GenerateSignupLinkParams"
					},
					{
						"type": "reference",
						"id": 557,
						"name": "GenerateInviteOrMagiclinkParams"
					},
					{
						"type": "reference",
						"id": 562,
						"name": "GenerateRecoveryLinkParams"
					},
					{
						"type": "reference",
						"id": 567,
						"name": "GenerateEmailChangeLinkParams"
					}
				]
			}
		},
		{
			"id": 590,
			"name": "GenerateLinkProperties",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "The properties related to the email link generated"
			},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 580,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 591,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 592,
							"name": "action_link",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The email link to send to the user.\nThe action_link follows the following format: auth/v1/verify?type={verification_type}&token={hashed_token}&redirect_to={redirect_to}"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 585,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 593,
							"name": "email_otp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The raw email OTP.\nYou should send this in the email if you want your users to verify using an OTP instead of the action link."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 590,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 594,
							"name": "hashed_token",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The hashed token appended to the action link."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 594,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 595,
							"name": "redirect_to",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The URL appended to the action link."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 596,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 596,
							"name": "verification_type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The verification type that the email link is associated to."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 598,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 597,
								"name": "GenerateLinkType"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								592,
								593,
								594,
								595,
								596
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 580,
							"character": 37
						}
					]
				}
			}
		},
		{
			"id": 577,
			"name": "GenerateLinkResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 563,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 578,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 579,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 565,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 580,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 581,
													"name": "properties",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 566,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 590,
														"name": "GenerateLinkProperties"
													}
												},
												{
													"id": 582,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 567,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 409,
														"name": "User"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														581,
														582
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 565,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 583,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 569,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										579,
										583
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 564,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 584,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 585,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 572,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 586,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 587,
													"name": "properties",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 573,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												},
												{
													"id": 588,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 574,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														587,
														588
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 572,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 589,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 576,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 767,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										585,
										589
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 571,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 597,
			"name": "GenerateLinkType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 601,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "signup"
					},
					{
						"type": "literal",
						"value": "invite"
					},
					{
						"type": "literal",
						"value": "magiclink"
					},
					{
						"type": "literal",
						"value": "recovery"
					},
					{
						"type": "literal",
						"value": "email_change_current"
					},
					{
						"type": "literal",
						"value": "email_change_new"
					}
				]
			}
		},
		{
			"id": 562,
			"name": "GenerateRecoveryLinkParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 528,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 563,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 565,
							"name": "email",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The user's email"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 531,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 566,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 532,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 573,
										"name": "GenerateLinkOptions"
									},
									{
										"type": "literal",
										"value": "redirectTo"
									}
								],
								"qualifiedName": "Pick",
								"package": "typescript",
								"name": "Pick"
							}
						},
						{
							"id": 564,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 529,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "recovery"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								565,
								566,
								564
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 528,
							"character": 41
						}
					]
				}
			}
		},
		{
			"id": 551,
			"name": "GenerateSignupLinkParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 514,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 552,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 554,
							"name": "email",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 516,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 556,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 518,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 573,
										"name": "GenerateLinkOptions"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "data"
											},
											{
												"type": "literal",
												"value": "redirectTo"
											}
										]
									}
								],
								"qualifiedName": "Pick",
								"package": "typescript",
								"name": "Pick"
							}
						},
						{
							"id": 555,
							"name": "password",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 517,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 553,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 515,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "signup"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								554,
								556,
								555,
								553
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 514,
							"character": 39
						}
					]
				}
			}
		},
		{
			"id": 313,
			"name": "GoTrueClientOptions",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 34,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 314,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 322,
							"name": "autoRefreshToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 44,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 321,
							"name": "detectSessionInUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 42,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 325,
							"name": "fetch",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 50,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "Fetch"
							}
						},
						{
							"id": 316,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 38,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 317,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 38,
											"character": 12
										}
									],
									"indexSignature": {
										"id": 318,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 319,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							}
						},
						{
							"id": 323,
							"name": "persistSession",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 46,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 324,
							"name": "storage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 48,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 739,
								"name": "SupportedStorage"
							}
						},
						{
							"id": 320,
							"name": "storageKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 40,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 315,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 36,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								322,
								321,
								325,
								316,
								323,
								324,
								320,
								315
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 34,
							"character": 34
						}
					]
				}
			}
		},
		{
			"id": 740,
			"name": "InitializeResult",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 913,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 741,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 742,
							"name": "error",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 913,
									"character": 33
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 767,
										"name": "AuthError"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								742
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 913,
							"character": 31
						}
					]
				}
			}
		},
		{
			"id": 614,
			"name": "MFAChallengeAndVerifyParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 639,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 615,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 617,
							"name": "code",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Verification code provided by the user."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 643,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 616,
							"name": "factorId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "ID of the factor being verified. Returned in enroll()."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 641,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								617,
								616
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 639,
							"character": 42
						}
					]
				}
			}
		},
		{
			"id": 611,
			"name": "MFAChallengeParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 634,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 612,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 613,
							"name": "factorId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "ID of the factor to be challenged. Returned in enroll()."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 636,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								613
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 634,
							"character": 33
						}
					]
				}
			}
		},
		{
			"id": 598,
			"name": "MFAEnrollParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 609,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 599,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 600,
							"name": "factorType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The type of factor being enrolled."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 611,
									"character": 2
								}
							],
							"type": {
								"type": "literal",
								"value": "totp"
							}
						},
						{
							"id": 602,
							"name": "friendlyName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Human readable name assigned to the factor."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 615,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 601,
							"name": "issuer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Domain which the user is enrolled with."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 613,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								600,
								602,
								601
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 609,
							"character": 30
						}
					]
				}
			}
		},
		{
			"id": 603,
			"name": "MFAUnenrollParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 618,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 604,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 605,
							"name": "factorId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "ID of the factor being unenrolled."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 620,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								605
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 618,
							"character": 32
						}
					]
				}
			}
		},
		{
			"id": 606,
			"name": "MFAVerifyParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 623,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 607,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 609,
							"name": "challengeId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "ID of the challenge being verified. Returned in challenge()."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 628,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 610,
							"name": "code",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Verification code provided by the user."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 631,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 608,
							"name": "factorId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "ID of the factor being verified. Returned in enroll()."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 625,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								609,
								610,
								608
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 623,
							"character": 30
						}
					]
				}
			}
		},
		{
			"id": 539,
			"name": "MobileOtpType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 493,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "sms"
					},
					{
						"type": "literal",
						"value": "phone_change"
					}
				]
			}
		},
		{
			"id": 339,
			"name": "OAuthResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 69,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 340,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 341,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 71,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 342,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 343,
													"name": "provider",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 72,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 310,
														"name": "Provider"
													}
												},
												{
													"id": 344,
													"name": "url",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 73,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														343,
														344
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 71,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 345,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 75,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										341,
										345
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 70,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 346,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 347,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 78,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 348,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 349,
													"name": "provider",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 79,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 310,
														"name": "Provider"
													}
												},
												{
													"id": 350,
													"name": "url",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 80,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														349,
														350
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 78,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 351,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 82,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 767,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										347,
										351
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 77,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 757,
			"name": "PageParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 932,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 758,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 759,
							"name": "page",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The page number"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 934,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 760,
							"name": "perPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Number of items returned per page"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 936,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								759,
								760
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 932,
							"character": 25
						}
					]
				}
			}
		},
		{
			"id": 750,
			"name": "Pagination",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 925,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 751,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 753,
							"name": "lastPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 928,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 752,
							"name": "nextPage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 927,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 754,
							"name": "total",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 929,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								753,
								752,
								754
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 925,
							"character": 25
						}
					],
					"indexSignature": {
						"id": 755,
						"name": "__index",
						"kind": 8192,
						"kindString": "Index signature",
						"flags": {},
						"parameters": [
							{
								"id": 756,
								"name": "key",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				}
			}
		},
		{
			"id": 310,
			"name": "Provider",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "One of the providers supported by GoTrue."
			},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 5,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "apple"
					},
					{
						"type": "literal",
						"value": "azure"
					},
					{
						"type": "literal",
						"value": "bitbucket"
					},
					{
						"type": "literal",
						"value": "discord"
					},
					{
						"type": "literal",
						"value": "facebook"
					},
					{
						"type": "literal",
						"value": "github"
					},
					{
						"type": "literal",
						"value": "gitlab"
					},
					{
						"type": "literal",
						"value": "google"
					},
					{
						"type": "literal",
						"value": "keycloak"
					},
					{
						"type": "literal",
						"value": "linkedin"
					},
					{
						"type": "literal",
						"value": "notion"
					},
					{
						"type": "literal",
						"value": "slack"
					},
					{
						"type": "literal",
						"value": "spotify"
					},
					{
						"type": "literal",
						"value": "twitch"
					},
					{
						"type": "literal",
						"value": "twitter"
					},
					{
						"type": "literal",
						"value": "workos"
					}
				]
			}
		},
		{
			"id": 352,
			"name": "SSOResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 85,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 353,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 354,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 87,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 355,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 356,
													"name": "url",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"shortText": "URL to take the user to (in a browser) to complete SSO."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 89,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														356
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 87,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 357,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 91,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										354,
										357
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 86,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 358,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 359,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 94,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								},
								{
									"id": 360,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 95,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 767,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										359,
										360
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 93,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 514,
			"name": "SignInWithIdTokenCredentials",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 443,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 515,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 518,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If the ID token contains a `nonce`, then the hash of this value is compared to the value in the ID token."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 451,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 519,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 452,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 520,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 521,
											"name": "captchaToken",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Verification token received when the user completes the captcha on the site."
											},
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 454,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												521
											]
										}
									],
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 452,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 516,
							"name": "provider",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Only Apple and Google ID tokens are supported for use from within iOS or Android applications."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 447,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "google"
									},
									{
										"type": "literal",
										"value": "apple"
									}
								]
							}
						},
						{
							"id": 517,
							"name": "token",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "ID token issued by Apple or Google."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 449,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								518,
								519,
								516,
								517
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 443,
							"character": 43
						}
					]
				}
			}
		},
		{
			"id": 502,
			"name": "SignInWithOAuthCredentials",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 428,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 503,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 505,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 431,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 506,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 509,
											"name": "queryParams",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "An object of query params"
											},
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 437,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 510,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 437,
															"character": 18
														}
													],
													"indexSignature": {
														"id": 511,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 512,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											}
										},
										{
											"id": 507,
											"name": "redirectTo",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "A URL to send the user to after they are confirmed."
											},
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 433,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 508,
											"name": "scopes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "A space-separated list of scopes granted to the OAuth application."
											},
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 435,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 513,
											"name": "skipBrowserRedirect",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "If set to true does not immediately redirect the current browser context to visit the OAuth authorization page for the provider."
											},
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 439,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												509,
												507,
												508,
												513
											]
										}
									],
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 431,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 504,
							"name": "provider",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "One of the providers supported by GoTrue."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 430,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 310,
								"name": "Provider"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								505,
								504
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 428,
							"character": 41
						}
					]
				}
			}
		},
		{
			"id": 472,
			"name": "SignInWithPasswordCredentials",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 364,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 473,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 474,
									"name": "email",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The user's email address."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 367,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 476,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 370,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 477,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 478,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 372,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														478
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 370,
													"character": 16
												}
											]
										}
									}
								},
								{
									"id": 475,
									"name": "password",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The user's password."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 369,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										474,
										476,
										475
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 365,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 479,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 482,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 380,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 483,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 485,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 388,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 484,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
														"text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 386,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														485,
														484
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 380,
													"character": 16
												}
											]
										}
									}
								},
								{
									"id": 481,
									"name": "password",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The user's password."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 379,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 480,
									"name": "phone",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The user's phone number."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 377,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										482,
										481,
										480
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 375,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 486,
			"name": "SignInWithPasswordlessCredentials",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 392,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 487,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 488,
									"name": "email",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The user's email address."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 395,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 489,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 396,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 490,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 494,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 408,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 493,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
														"text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 406,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 491,
													"name": "emailRedirectTo",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "The redirect url embedded in the email link"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 398,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 492,
													"name": "shouldCreateUser",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "If set to false, this method will not create a new user. Defaults to true."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 400,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														494,
														493,
														491,
														492
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 396,
													"character": 16
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										488,
										489
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 393,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 495,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 497,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 414,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 498,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 501,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 424,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 500,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
														"text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 422,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 499,
													"name": "shouldCreateUser",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "If set to false, this method will not create a new user. Defaults to true."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 416,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														501,
														500,
														499
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 414,
													"character": 16
												}
											]
										}
									}
								},
								{
									"id": 496,
									"name": "phone",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The user's phone number."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 413,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										497,
										496
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 411,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 541,
			"name": "SignInWithSSO",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 496,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 542,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 543,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 497,
											"character": 2
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 544,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 546,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 501,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 545,
													"name": "redirectTo",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "A URL to send the user to after they have signed-in."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 499,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														546,
														545
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 497,
													"character": 12
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										543
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 496,
									"character": 28
								}
							]
						}
					},
					{
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 547,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 548,
											"name": "providerId",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "UUID of the SSO provider to invoke single-sign on to."
											},
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 506,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												548
											]
										}
									],
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 504,
											"character": 4
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 549,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 550,
											"name": "domain",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Domain name of the organization for which to invoke single-sign on."
											},
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 510,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												550
											]
										}
									],
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 508,
											"character": 4
										}
									]
								}
							}
						]
					}
				]
			}
		},
		{
			"id": 456,
			"name": "SignUpWithPasswordCredentials",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 329,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 457,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 458,
									"name": "email",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The user's email address."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 332,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 460,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 335,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 461,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 464,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 345,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 463,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
														"text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 343,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 462,
													"name": "emailRedirectTo",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "The redirect url embedded in the email link"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 337,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														464,
														463,
														462
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 335,
													"character": 16
												}
											]
										}
									}
								},
								{
									"id": 459,
									"name": "password",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The user's password."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 334,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										458,
										460,
										459
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 330,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 465,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 468,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 353,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 469,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 471,
													"name": "captchaToken",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "Verification token received when the user completes the captcha on the site."
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 361,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 470,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "A custom data object to store the user's metadata. This maps to the `auth.users.user_metadata` column.",
														"text": "The `data` should be a JSON object that includes user-specific info, such as their first and last name.\n"
													},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 359,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														471,
														470
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 353,
													"character": 16
												}
											]
										}
									}
								},
								{
									"id": 467,
									"name": "password",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The user's password."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 352,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 466,
									"name": "phone",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The user's phone number."
									},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 350,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										468,
										467,
										466
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 348,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 739,
			"name": "SupportedStorage",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 911,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"qualifiedName": "Storage",
								"package": "typescript",
								"name": "Storage"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "getItem"
									},
									{
										"type": "literal",
										"value": "setItem"
									},
									{
										"type": "literal",
										"value": "removeItem"
									}
								]
							}
						],
						"qualifiedName": "Pick",
						"package": "typescript",
						"name": "Pick"
					}
				],
				"name": "PromisifyMethods"
			}
		},
		{
			"id": 361,
			"name": "UserResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 98,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 362,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 363,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 100,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 364,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 365,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 101,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"id": 409,
														"name": "User"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														365
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 100,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 366,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 103,
											"character": 6
										}
									],
									"type": {
										"type": "literal",
										"value": null
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										363,
										366
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 99,
									"character": 4
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 367,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 368,
									"name": "data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 106,
											"character": 6
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 369,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 370,
													"name": "user",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/lib/types.ts",
															"line": 107,
															"character": 8
														}
													],
													"type": {
														"type": "literal",
														"value": null
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														370
													]
												}
											],
											"sources": [
												{
													"fileName": "src/lib/types.ts",
													"line": 106,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 371,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/lib/types.ts",
											"line": 109,
											"character": 6
										}
									],
									"type": {
										"type": "reference",
										"id": 767,
										"name": "AuthError"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										368,
										371
									]
								}
							],
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 105,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 522,
			"name": "VerifyOtpParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 458,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 523,
						"name": "VerifyMobileOtpParams"
					},
					{
						"type": "reference",
						"id": 531,
						"name": "VerifyEmailOtpParams"
					}
				]
			}
		},
		{
			"id": 764,
			"name": "isAuthApiError",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 34,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 765,
					"name": "isAuthApiError",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 766,
							"name": "error",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "error",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"id": 774,
							"name": "AuthApiError"
						}
					}
				}
			]
		},
		{
			"id": 761,
			"name": "isAuthError",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/errors.ts",
					"line": 12,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 762,
					"name": "isAuthError",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 763,
							"name": "error",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "error",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"id": 767,
							"name": "AuthError"
						}
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				774,
				767,
				835,
				822,
				860,
				810,
				787,
				795,
				1,
				77
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				381,
				437,
				395,
				573,
				732,
				687,
				372,
				446,
				454,
				409,
				402,
				432,
				384,
				406,
				531,
				523
			]
		},
		{
			"title": "Type Aliases",
			"kind": 4194304,
			"children": [
				312,
				311,
				716,
				707,
				729,
				720,
				655,
				631,
				676,
				665,
				646,
				618,
				326,
				675,
				743,
				540,
				567,
				557,
				576,
				590,
				577,
				597,
				562,
				551,
				313,
				740,
				614,
				611,
				598,
				603,
				606,
				539,
				339,
				757,
				750,
				310,
				352,
				514,
				502,
				472,
				486,
				541,
				456,
				739,
				361,
				522
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				764,
				761
			]
		}
	],
	"sources": [
		{
			"fileName": "src/index.ts",
			"line": 1,
			"character": 0
		}
	]
}